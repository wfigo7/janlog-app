# backend/seeds/rulesets.yaml
# デフォルトグローバルルールセット定義
#
# このファイルは、seed_rulesets.pyスクリプトが読み込み、
# DynamoDBにグローバルルールセットとして投入します。
#
# スクリプトはこのファイルのみに依存し、アプリケーションコード（app/）には
# 依存しません。これにより、初期化スクリプトの独立性を保ちます。
#
# データ構造:
# - name: ルールセット名
# - gameMode: ゲームモード（"three" または "four"）
# - startingPoints: 開始点
# - basePoints: 基準点（返し点）
# - uma: ウマ配列（順位ごとのポイント）
# - oka: オカポイント（1位のみ）
# - useChips: チップ使用有無
# - description: ルールの説明
#
# DynamoDBに保存される際のデータ構造:
# {
#   "PK": "GLOBAL",
#   "SK": "RULESET#{rulesetId}",
#   "entityType": "RULESET",
#   "rulesetId": str (UUID),
#   "ruleName": str,
#   "gameMode": str,
#   "startingPoints": int,
#   "basePoints": int,
#   "useFloatingUma": bool,
#   "uma": List[int],
#   "umaMatrix": Optional[Dict],
#   "oka": int,
#   "useChips": bool,
#   "memo": Optional[str],
#   "basicRules": Optional[Dict],
#   "gameplayRules": Optional[Dict],
#   "additionalRules": Optional[List],
#   "isGlobal": bool,
#   "createdBy": str,
#   "createdAt": str (ISO 8601),
#   "updatedAt": str (ISO 8601)
# }

rulesets:
  # 4人麻雀ルール
  
  - name: Mリーグルール
    gameMode: four
    startingPoints: 25000
    basePoints: 30000
    uma: [30, 10, -10, -30]
    oka: 20
    useChips: false
    isGlobal: true
    description: Mリーグで使用される標準ルール
    # 計算例: 1位 35000点の場合
    # (35000 - 30000) / 1000 + 30 + 20 = 55.0pt
    
  - name: 最高位戦ルール
    gameMode: four
    startingPoints: 30000
    basePoints: 30000
    uma: [30, 10, -10, -30]
    oka: 0
    useChips: false
    isGlobal: true
    description: 最高位戦日本プロ麻雀協会の順位戦ルール
    # 計算例: 1位 35000点の場合
    # (35000 - 30000) / 1000 + 30 = 35.0pt
    
  - name: 連盟公式ルール
    gameMode: four
    startingPoints: 30000
    basePoints: 30000
    useFloatingUma: true
    uma: [30, 10, -10, -30]  # 標準ウマ（使用されない）
    umaMatrix:
      "0": [0, 0, 0, 0]
      "1": [12, -1, -3, -8]
      "2": [8, 4, -4, -8]
      "3": [8, 3, 1, -12]
      "4": [0, 0, 0, 0]
    oka: 0
    useChips: false
    isGlobal: true
    description: 日本プロ麻雀連盟の公式ルール
    # 30000点持ち30000点返し（オカなし）
    # 浮き人数1〜4でウマが変動
    # 例: 浮き2人の場合、ウマは [8, 4, -4, -8]
    
  - name: フリー雀荘標準
    gameMode: four
    startingPoints: 25000
    basePoints: 30000
    uma: [30, 10, -10, -30]
    oka: 20
    useChips: true
    isGlobal: true
    description: 一般的なフリー雀荘ルール（チップあり）
    # チップあり（役満、ドラ等でチップ加算）
    
  # 3人麻雀ルール
  
  - name: 3人麻雀標準
    gameMode: three
    startingPoints: 35000
    basePoints: 40000
    uma: [20, 0, -20]
    oka: 15
    useChips: false
    isGlobal: true
    description: 3人麻雀の一般的なルール
    # 35000点持ち40000点返し
    # 2位はウマ±0
    
  - name: 3人麻雀フリー雀荘標準
    gameMode: three
    startingPoints: 35000
    basePoints: 40000
    uma: [20, 0, -20]
    oka: 15
    useChips: true
    isGlobal: true
    description: 一般的なフリー雀荘ルール（チップあり）
    # 25000点持ち35000点返し
    # チップあり
    
  - name: 3人麻雀沈みウマルール
    gameMode: three
    startingPoints: 35000
    basePoints: 40000
    useFloatingUma: true
    uma: [20, 0, -20]  # 標準ウマ（使用されない）
    umaMatrix:
      "0": [0, 0, 0]
      "1": [40, -20, -20]
      "2": [20, 0, -20]
      "3": [0, 0, 0]
      "4": [0, 0, 0]
    oka: 15
    useChips: false
    isGlobal: true
    description: 浮き人数に応じてウマが変動
    # 30000点持ち35000点返し
    # 浮き人数0〜2でウマが変動
    # 例: 浮き1人の場合、ウマは [40, -20, -20]

# よく使われるウマパターン（参考情報）
common_uma_patterns:
  three:
    標準: [20, 0, -20]
    高レート: [30, 0, -30]
    低レート: [10, 0, -10]
    
  four:
    Mリーグ: [30, 10, -10, -30]
    フリー雀荘: [20, 10, -10, -20]
    競技麻雀: [15, 5, -5, -15]
    高レート: [40, 20, -20, -40]

# オカの計算方法（参考情報）
# オカ = (基準点 - 開始点) × 人数 / 1000
#
# 例:
# - 4人麻雀 25000点持ち30000点返し: (30000 - 25000) × 4 / 1000 = 20pt
# - 3人麻雀 35000点持ち40000点返し: (40000 - 35000) × 3 / 1000 = 15pt
# - 3人麻雀 25000点持ち35000点返し: (35000 - 25000) × 3 / 1000 = 30pt

# 最終ポイント計算式（参考情報）
# 最終ポイント = (素点 - 基準点) / 1000 + ウマ + オカ（1位のみ）
#
# 例: Mリーグルールで1位 35000点の場合
# (35000 - 30000) / 1000 + 30 + 20 = 5 + 30 + 20 = 55.0pt
