name: CD Pipeline

on:
  workflow_dispatch:
    inputs:
      deploy_backend:
        description: 'Deploy Backend (Docker -> ECR -> Lambda)'
        required: false
        default: false
        type: boolean
      
      deploy_infrastructure:
        description: 'Deploy Infrastructure (AWS CDK)'
        required: false
        default: false
        type: boolean
      
      deploy_frontend_web:
        description: 'Deploy Frontend Web (Expo Web -> S3)'
        required: false
        default: false
        type: boolean
      
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          # - production  # Phase 2で追加

env:
  AWS_REGION: ap-northeast-1
  ENVIRONMENT: ${{ inputs.environment }}

jobs:
  # Backend Deployment Job (Phase 1)
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy_backend }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      
      - name: Verify AWS connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity
          echo "✅ AWS authentication successful"

  # Infrastructure Deployment Job (Phase 1)
  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy_infrastructure }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Verify AWS connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity
          echo "✅ AWS authentication successful"

  # Frontend Web Deployment Job (Phase 1)
  deploy-frontend-web:
    name: Deploy Frontend Web
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy_frontend_web }}
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: frontend/.nvmrc
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Verify AWS connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity
          echo "✅ AWS authentication successful"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build and Deploy Frontend Web
        run: |
          echo "🚀 Building and deploying Frontend Web to S3..."
          cd ..
          make web-build-deploy
          echo "✅ Frontend Web deployment completed"
      
      - name: Deployment Summary
        run: |
          echo "📊 Deployment Summary"
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Component: Frontend Web (Expo Web -> S3 + CloudFront)"
          echo "Status: ✅ Success"
